//
// File generated by rootcint at Fri Aug 12 13:22:08 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BRecCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BRecCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void BRecParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BRecParameters(void *p = 0);
   static void *newArray_BRecParameters(Long_t size, void *p);
   static void delete_BRecParameters(void *p);
   static void deleteArray_BRecParameters(void *p);
   static void destruct_BRecParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BRecParameters*)
   {
      ::BRecParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BRecParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BRecParameters", ::BRecParameters::Class_Version(), "./BRecParameters.h", 8,
                  typeid(::BRecParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BRecParameters::Dictionary, isa_proxy, 4,
                  sizeof(::BRecParameters) );
      instance.SetNew(&new_BRecParameters);
      instance.SetNewArray(&newArray_BRecParameters);
      instance.SetDelete(&delete_BRecParameters);
      instance.SetDeleteArray(&deleteArray_BRecParameters);
      instance.SetDestructor(&destruct_BRecParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BRecParameters*)
   {
      return GenerateInitInstanceLocal((::BRecParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BRecParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BReconstruct_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BReconstruct(void *p = 0);
   static void *newArray_BReconstruct(Long_t size, void *p);
   static void delete_BReconstruct(void *p);
   static void deleteArray_BReconstruct(void *p);
   static void destruct_BReconstruct(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BReconstruct*)
   {
      ::BReconstruct *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BReconstruct >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BReconstruct", ::BReconstruct::Class_Version(), "./BReconstruct.h", 35,
                  typeid(::BReconstruct), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BReconstruct::Dictionary, isa_proxy, 4,
                  sizeof(::BReconstruct) );
      instance.SetNew(&new_BReconstruct);
      instance.SetNewArray(&newArray_BReconstruct);
      instance.SetDelete(&delete_BReconstruct);
      instance.SetDeleteArray(&deleteArray_BReconstruct);
      instance.SetDestructor(&destruct_BReconstruct);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BReconstruct*)
   {
      return GenerateInitInstanceLocal((::BReconstruct*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BReconstruct*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BReconstructMuon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BReconstructMuon(void *p = 0);
   static void *newArray_BReconstructMuon(Long_t size, void *p);
   static void delete_BReconstructMuon(void *p);
   static void deleteArray_BReconstructMuon(void *p);
   static void destruct_BReconstructMuon(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BReconstructMuon*)
   {
      ::BReconstructMuon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BReconstructMuon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BReconstructMuon", ::BReconstructMuon::Class_Version(), "./BReconstructMuon.h", 17,
                  typeid(::BReconstructMuon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BReconstructMuon::Dictionary, isa_proxy, 4,
                  sizeof(::BReconstructMuon) );
      instance.SetNew(&new_BReconstructMuon);
      instance.SetNewArray(&newArray_BReconstructMuon);
      instance.SetDelete(&delete_BReconstructMuon);
      instance.SetDeleteArray(&deleteArray_BReconstructMuon);
      instance.SetDestructor(&destruct_BReconstructMuon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BReconstructMuon*)
   {
      return GenerateInitInstanceLocal((::BReconstructMuon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BReconstructMuon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BRecQualify_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BRecQualify(void *p = 0);
   static void *newArray_BRecQualify(Long_t size, void *p);
   static void delete_BRecQualify(void *p);
   static void deleteArray_BRecQualify(void *p);
   static void destruct_BRecQualify(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BRecQualify*)
   {
      ::BRecQualify *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BRecQualify >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BRecQualify", ::BRecQualify::Class_Version(), "./BRecQualify.h", 25,
                  typeid(::BRecQualify), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BRecQualify::Dictionary, isa_proxy, 4,
                  sizeof(::BRecQualify) );
      instance.SetNew(&new_BRecQualify);
      instance.SetNewArray(&newArray_BRecQualify);
      instance.SetDelete(&delete_BRecQualify);
      instance.SetDeleteArray(&deleteArray_BRecQualify);
      instance.SetDestructor(&destruct_BRecQualify);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BRecQualify*)
   {
      return GenerateInitInstanceLocal((::BRecQualify*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BRecQualify*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BRecQuality_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BRecQuality(void *p = 0);
   static void *newArray_BRecQuality(Long_t size, void *p);
   static void delete_BRecQuality(void *p);
   static void deleteArray_BRecQuality(void *p);
   static void destruct_BRecQuality(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BRecQuality*)
   {
      ::BRecQuality *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BRecQuality >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BRecQuality", ::BRecQuality::Class_Version(), "./BRecQuality.h", 8,
                  typeid(::BRecQuality), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BRecQuality::Dictionary, isa_proxy, 4,
                  sizeof(::BRecQuality) );
      instance.SetNew(&new_BRecQuality);
      instance.SetNewArray(&newArray_BRecQuality);
      instance.SetDelete(&delete_BRecQuality);
      instance.SetDeleteArray(&deleteArray_BRecQuality);
      instance.SetDestructor(&destruct_BRecQuality);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BRecQuality*)
   {
      return GenerateInitInstanceLocal((::BRecQuality*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BRecQuality*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr BRecParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BRecParameters::Class_Name()
{
   return "BRecParameters";
}

//______________________________________________________________________________
const char *BRecParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BRecParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BRecParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BRecParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BRecParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BRecParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BRecParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BRecParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BReconstruct::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BReconstruct::Class_Name()
{
   return "BReconstruct";
}

//______________________________________________________________________________
const char *BReconstruct::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstruct*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BReconstruct::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstruct*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BReconstruct::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstruct*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BReconstruct::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstruct*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BReconstructMuon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BReconstructMuon::Class_Name()
{
   return "BReconstructMuon";
}

//______________________________________________________________________________
const char *BReconstructMuon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstructMuon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BReconstructMuon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstructMuon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BReconstructMuon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstructMuon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BReconstructMuon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BReconstructMuon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BRecQualify::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BRecQualify::Class_Name()
{
   return "BRecQualify";
}

//______________________________________________________________________________
const char *BRecQualify::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQualify*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BRecQualify::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQualify*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BRecQualify::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQualify*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BRecQualify::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQualify*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BRecQuality::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BRecQuality::Class_Name()
{
   return "BRecQuality";
}

//______________________________________________________________________________
const char *BRecQuality::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQuality*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BRecQuality::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQuality*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BRecQuality::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQuality*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BRecQuality::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BRecQuality*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void BReconstruct::Streamer(TBuffer &R__b)
{
   // Stream an object of class BReconstruct.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BReconstruct::Class(),this);
   } else {
      R__b.WriteClassBuffer(BReconstruct::Class(),this);
   }
}

//______________________________________________________________________________
void BReconstruct::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BReconstruct.
      TClass *R__cl = ::BReconstruct::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventMask", &fEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomTel", &fGeomTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSecInteraction", &fSecInteraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecParameters", &fRecParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZeroSecInteraction", &fZeroSecInteraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMuonCriterionParams", &fMuonCriterionParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventMaskName", &fEventMaskName);
      R__insp.InspectMember(fEventMaskName, "fEventMaskName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVerbose", &fVerbose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFixAzimuth", &fFixAzimuth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXshift", &fXshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYshift", &fYshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZshift", &fZshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNchIsRes", &fNchIsRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitialsType", &fInitialsType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinimizer", &fMinimizer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFunctor", &fFunctor);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BReconstruct(void *p) {
      return  p ? new(p) ::BReconstruct : new ::BReconstruct;
   }
   static void *newArray_BReconstruct(Long_t nElements, void *p) {
      return p ? new(p) ::BReconstruct[nElements] : new ::BReconstruct[nElements];
   }
   // Wrapper around operator delete
   static void delete_BReconstruct(void *p) {
      delete ((::BReconstruct*)p);
   }
   static void deleteArray_BReconstruct(void *p) {
      delete [] ((::BReconstruct*)p);
   }
   static void destruct_BReconstruct(void *p) {
      typedef ::BReconstruct current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BReconstruct

//______________________________________________________________________________
void BRecParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class BRecParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BRecParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(BRecParameters::Class(),this);
   }
}

//______________________________________________________________________________
void BRecParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BRecParameters.
      TClass *R__cl = ::BRecParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFuncValue", &fFuncValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQual", &fQual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumPar", &fNumPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsFixed", &fIsFixed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInitial", &fInitial);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinLimit", &fMinLimit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMaxLimit", &fMaxLimit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fErrors", &fErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhit", &fNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTres", &fTres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNchGeom", &fNchGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhitMC", &fNhitMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTresMC", &fTresMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNchGeomMC", &fNchGeomMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaRec", &fThetaRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMC", &fThetaMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiRec", &fPhiRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiMC", &fPhiMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0Rec", &fX0Rec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0MC", &fX0MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY0Rec", &fY0Rec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY0MC", &fY0MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeRec", &fTimeRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeMC", &fTimeMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMC", &fPMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFuncValueMC", &fFuncValueMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZDist", &fZDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZDistMC", &fZDistMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fImpulseNumbers", &fImpulseNumbers);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BRecParameters(void *p) {
      return  p ? new(p) ::BRecParameters : new ::BRecParameters;
   }
   static void *newArray_BRecParameters(Long_t nElements, void *p) {
      return p ? new(p) ::BRecParameters[nElements] : new ::BRecParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_BRecParameters(void *p) {
      delete ((::BRecParameters*)p);
   }
   static void deleteArray_BRecParameters(void *p) {
      delete [] ((::BRecParameters*)p);
   }
   static void destruct_BRecParameters(void *p) {
      typedef ::BRecParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BRecParameters

//______________________________________________________________________________
void BReconstructMuon::Streamer(TBuffer &R__b)
{
   // Stream an object of class BReconstructMuon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BReconstructMuon::Class(),this);
   } else {
      R__b.WriteClassBuffer(BReconstructMuon::Class(),this);
   }
}

//______________________________________________________________________________
void BReconstructMuon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BReconstructMuon.
      TClass *R__cl = ::BReconstructMuon::IsA();
      if (R__cl || R__insp.IsA()) { }
      BReconstruct::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BReconstructMuon(void *p) {
      return  p ? new(p) ::BReconstructMuon : new ::BReconstructMuon;
   }
   static void *newArray_BReconstructMuon(Long_t nElements, void *p) {
      return p ? new(p) ::BReconstructMuon[nElements] : new ::BReconstructMuon[nElements];
   }
   // Wrapper around operator delete
   static void delete_BReconstructMuon(void *p) {
      delete ((::BReconstructMuon*)p);
   }
   static void deleteArray_BReconstructMuon(void *p) {
      delete [] ((::BReconstructMuon*)p);
   }
   static void destruct_BReconstructMuon(void *p) {
      typedef ::BReconstructMuon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BReconstructMuon

//______________________________________________________________________________
void BRecQualify::Streamer(TBuffer &R__b)
{
   // Stream an object of class BRecQualify.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BRecQualify::Class(),this);
   } else {
      R__b.WriteClassBuffer(BRecQualify::Class(),this);
   }
}

//______________________________________________________________________________
void BRecQualify::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BRecQualify.
      TClass *R__cl = ::BRecQualify::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventSource", &fEventSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventMask", &fEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomTel", &fGeomTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSecInteraction", &fSecInteraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecParameters", &fRecParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCEventMask", &fMCEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilterEventMaskName", &fFilterEventMaskName);
      R__insp.InspectMember(fFilterEventMaskName, "fFilterEventMaskName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVerbose", &fVerbose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNchIsRes", &fNchIsRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTelLength", &fTelLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInterpolator", &fInterpolator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMuonNumber", &fMuonNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQ10FileName", &fQ10FileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitCriterionFlag", &fHitCriterionFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRhoUpLim", &fRhoUpLim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXshift", &fXshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYshift", &fYshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZshift", &fZshift);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BRecQualify(void *p) {
      return  p ? new(p) ::BRecQualify : new ::BRecQualify;
   }
   static void *newArray_BRecQualify(Long_t nElements, void *p) {
      return p ? new(p) ::BRecQualify[nElements] : new ::BRecQualify[nElements];
   }
   // Wrapper around operator delete
   static void delete_BRecQualify(void *p) {
      delete ((::BRecQualify*)p);
   }
   static void deleteArray_BRecQualify(void *p) {
      delete [] ((::BRecQualify*)p);
   }
   static void destruct_BRecQualify(void *p) {
      typedef ::BRecQualify current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BRecQualify

//______________________________________________________________________________
void BRecQuality::Streamer(TBuffer &R__b)
{
   // Stream an object of class BRecQuality.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BRecQuality::Class(),this);
   } else {
      R__b.WriteClassBuffer(BRecQuality::Class(),this);
   }
}

//______________________________________________________________________________
void BRecQuality::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BRecQuality.
      TClass *R__cl = ::BRecQuality::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceAzimuthAngle", &fSourceAzimuthAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePolarAngle", &fSourcePolarAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecAzimuthAngle", &fRecAzimuthAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecPolarAngle", &fRecPolarAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsi", &fPsi);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BRecQuality(void *p) {
      return  p ? new(p) ::BRecQuality : new ::BRecQuality;
   }
   static void *newArray_BRecQuality(Long_t nElements, void *p) {
      return p ? new(p) ::BRecQuality[nElements] : new ::BRecQuality[nElements];
   }
   // Wrapper around operator delete
   static void delete_BRecQuality(void *p) {
      delete ((::BRecQuality*)p);
   }
   static void deleteArray_BRecQuality(void *p) {
      delete [] ((::BRecQuality*)p);
   }
   static void destruct_BRecQuality(void *p) {
      typedef ::BRecQuality current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BRecQuality

/********************************************************
* BRecCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBRecCint();

extern "C" void G__set_cpp_environmentBRecCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BReconstruct.h");
  G__add_compiledheader("BRecParameters.h");
  G__add_compiledheader("BReconstructMuon.h");
  G__add_compiledheader("BRecQualify.h");
  G__add_compiledheader("BRecQuality.h");
  G__add_compiledheader("BRecIncl.h");
  G__cpp_reset_tagtableBRecCint();
}
#include <new>
extern "C" int G__cpp_dllrevBRecCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BRecParameters */
static int G__BRecCint_269_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BRecParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BRecParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BRecParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BRecParameters((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BRecParameters((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BRecParameters[n];
       } else {
         p = new((void*) gvp) BRecParameters[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BRecParameters;
       } else {
         p = new((void*) gvp) BRecParameters;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BRecParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BRecParameters*) G__getstructoffset())->GetNumPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BRecParameters*) G__getstructoffset())->GetIsFixed((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetInitial((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetMaxLimit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetMinLimit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetStep((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetQual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetFuncValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetFuncValueMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetThetaRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetThetaMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetPhiMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetPhiRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetX0Rec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetY0Rec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetX0MC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetY0MC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetPMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetZDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetZDistMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BRecParameters*) G__getstructoffset())->GetImpulseNumber((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetNumPar((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetIsFixed((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetInitial((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetMinLimit((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetMaxLimit((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetStep((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetErrors((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetFuncValue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetQual((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BRecParameters*) G__getstructoffset())->GetNhit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BRecParameters*) G__getstructoffset())->GetTres((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BRecParameters*) G__getstructoffset())->GetNchGeom((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BRecParameters*) G__getstructoffset())->GetNhitMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BRecParameters*) G__getstructoffset())->GetTresMC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BRecParameters*) G__getstructoffset())->GetNchGeomMC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BRecParameters*) G__getstructoffset())->GetTresNchGeom((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetNhit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetTres((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetNchGeom((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetTresMC((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetThetaRec((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetThetaMC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetPhiRec((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetPhiMC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetX0Rec((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetX0MC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetY0Rec((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetY0MC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetP((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetPMC((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetTimeRec((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetTimeMC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetFuncValueMC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetZDist((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetZDistMC((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->SetImpulseNumbers((int*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BRecParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BRecParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BRecParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BRecParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_269_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BRecParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BRecCint_269_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BRecParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BRecParameters(*(BRecParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BRecParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BRecParameters G__TBRecParameters;
static int G__BRecCint_269_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BRecParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BRecParameters*) (soff+(sizeof(BRecParameters)*i)))->~G__TBRecParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BRecParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BRecParameters*) (soff))->~G__TBRecParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BRecCint_269_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BRecParameters* dest = (BRecParameters*) G__getstructoffset();
   *dest = *(BRecParameters*) libp->para[0].ref;
   const BRecParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BReconstruct */
static int G__BRecCint_272_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BReconstruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BReconstruct((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BReconstruct((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BReconstruct((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BReconstruct((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BReconstruct[n];
       } else {
         p = new((void*) gvp) BReconstruct[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BReconstruct;
       } else {
         p = new((void*) gvp) BReconstruct;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BReconstruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->SetVerbose((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->FixAzimuth((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->SetNchIsRes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->SetInitialsType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->SetEventMaskName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BReconstruct::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BReconstruct::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BReconstruct::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BReconstruct::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstruct*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BReconstruct::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BReconstruct::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BReconstruct::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_272_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BReconstruct::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BRecCint_272_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BReconstruct* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BReconstruct(*(BReconstruct*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BReconstruct));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BReconstruct G__TBReconstruct;
static int G__BRecCint_272_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BReconstruct*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BReconstruct*) (soff+(sizeof(BReconstruct)*i)))->~G__TBReconstruct();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BReconstruct*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BReconstruct*) (soff))->~G__TBReconstruct();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BRecCint_272_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BReconstruct* dest = (BReconstruct*) G__getstructoffset();
   *dest = *(BReconstruct*) libp->para[0].ref;
   const BReconstruct& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BReconstructMuon */
static int G__BRecCint_274_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BReconstructMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BReconstructMuon((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BReconstructMuon((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BReconstructMuon((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BReconstructMuon((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BReconstructMuon[n];
       } else {
         p = new((void*) gvp) BReconstructMuon[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BReconstructMuon;
       } else {
         p = new((void*) gvp) BReconstructMuon;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BReconstructMuon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BReconstructMuon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BReconstructMuon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BReconstructMuon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BReconstructMuon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BReconstructMuon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BReconstructMuon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BReconstructMuon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_274_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BReconstructMuon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BRecCint_274_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BReconstructMuon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BReconstructMuon(*(BReconstructMuon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BReconstructMuon G__TBReconstructMuon;
static int G__BRecCint_274_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BReconstructMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BReconstructMuon*) (soff+(sizeof(BReconstructMuon)*i)))->~G__TBReconstructMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BReconstructMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BReconstructMuon*) (soff))->~G__TBReconstructMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BRecCint_274_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BReconstructMuon* dest = (BReconstructMuon*) G__getstructoffset();
   *dest = *(BReconstructMuon*) libp->para[0].ref;
   const BReconstructMuon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BRecQualify */
static int G__BRecCint_280_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BRecQualify* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BRecQualify((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BRecQualify((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BRecQualify((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BRecQualify((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BRecQualify[n];
       } else {
         p = new((void*) gvp) BRecQualify[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BRecQualify;
       } else {
         p = new((void*) gvp) BRecQualify;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BRecQualify));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->SetQ10Path((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((BRecQualify*) G__getstructoffset())->SetHitCriterionFlag((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BRecQualify*) G__getstructoffset())->SetHitCriterionFlag();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->SetFilterEventMaskName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->MCResiduals();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->MCResidualsX0Y0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->SetVerbose((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->SetNchIsRes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BRecQualify::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecQualify::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BRecQualify::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BRecQualify::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQualify*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecQualify::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BRecQualify::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecQualify::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_280_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BRecQualify::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BRecCint_280_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BRecQualify* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BRecQualify(*(BRecQualify*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BRecQualify));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BRecQualify G__TBRecQualify;
static int G__BRecCint_280_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BRecQualify*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BRecQualify*) (soff+(sizeof(BRecQualify)*i)))->~G__TBRecQualify();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BRecQualify*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BRecQualify*) (soff))->~G__TBRecQualify();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BRecQuality */
static int G__BRecCint_281_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BRecQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BRecQuality((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BRecQuality((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BRecQuality((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BRecQuality((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BRecQuality[n];
       } else {
         p = new((void*) gvp) BRecQuality[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BRecQuality;
       } else {
         p = new((void*) gvp) BRecQuality;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BRecQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQuality*) G__getstructoffset())->SetSourceAzimuthAngle((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQuality*) G__getstructoffset())->SetSourcePolarAngle((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQuality*) G__getstructoffset())->SetRecAzimuthAngle((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQuality*) G__getstructoffset())->SetRecPolarAngle((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BRecQuality::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecQuality::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BRecQuality::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BRecQuality::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BRecQuality*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecQuality::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BRecQuality::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BRecQuality::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BRecCint_281_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BRecQuality::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BRecCint_281_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BRecQuality* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BRecQuality(*(BRecQuality*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BRecCintLN_BRecQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BRecQuality G__TBRecQuality;
static int G__BRecCint_281_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BRecQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BRecQuality*) (soff+(sizeof(BRecQuality)*i)))->~G__TBRecQuality();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BRecQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BRecQuality*) (soff))->~G__TBRecQuality();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BRecCint_281_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BRecQuality* dest = (BRecQuality*) G__getstructoffset();
   *dest = *(BRecQuality*) libp->para[0].ref;
   const BRecQuality& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BRecParameters */

/* BReconstruct */

/* BReconstructMuon */

/* BRecQualify */

/* BRecQuality */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBRecCint {
 public:
  G__Sizep2memfuncBRecCint(): p(&G__Sizep2memfuncBRecCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBRecCint::*p)();
};

size_t G__get_sizep2memfuncBRecCint()
{
  G__Sizep2memfuncBRecCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBRecCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BRecCintLN_BRecParameters))) {
     BRecParameters *G__Lderived;
     G__Lderived=(BRecParameters*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecParameters),G__get_linked_tagnum(&G__BRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecParameters),G__get_linked_tagnum(&G__BRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct))) {
     BReconstruct *G__Lderived;
     G__Lderived=(BReconstruct*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct),G__get_linked_tagnum(&G__BRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct),G__get_linked_tagnum(&G__BRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct),G__get_linked_tagnum(&G__BRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct),G__get_linked_tagnum(&G__BRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon))) {
     BReconstructMuon *G__Lderived;
     G__Lderived=(BReconstructMuon*)0x1000;
     {
       BReconstruct *G__Lpbase=(BReconstruct*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon),G__get_linked_tagnum(&G__BRecCintLN_BReconstruct),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon),G__get_linked_tagnum(&G__BRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon),G__get_linked_tagnum(&G__BRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon),G__get_linked_tagnum(&G__BRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon),G__get_linked_tagnum(&G__BRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify))) {
     BRecQualify *G__Lderived;
     G__Lderived=(BRecQualify*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify),G__get_linked_tagnum(&G__BRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify),G__get_linked_tagnum(&G__BRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify),G__get_linked_tagnum(&G__BRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify),G__get_linked_tagnum(&G__BRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BRecCintLN_BRecQuality))) {
     BRecQuality *G__Lderived;
     G__Lderived=(BRecQuality*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQuality),G__get_linked_tagnum(&G__BRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQuality),G__get_linked_tagnum(&G__BRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBRecCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair>",117,G__get_linked_tagnum(&G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BRecCintLN_reverse_iteratorlEvectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BRecCintLN_reverse_iteratorlEvectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BReconstruct::pair>",117,G__get_linked_tagnum(&G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BRecParameters */
static void G__setup_memvarBRecParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecParameters));
   { BRecParameters *p; p=(BRecParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFuncValue=",0,"Значение функции минимизации");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fQual=",0,"0 - поиск минимума прошел удачно, остальные значения - с ошибкой");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIsFixed=",0,"[fNumPar]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fInitial=",0,"[fNumPar] Начальные значения варьируемых параметров");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinLimit=",0,"[fNumPar] Ограничение снизу на значения варьируемых параметров");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxLimit=",0,"[fNumPar] Ограничение сверху на значения варьируемых параметров");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"[fNumPar] Начальный шаг по варьируемым параметрам");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fErrors=",0,"[fNumPar] Ошибки по варьируемым параметрам");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhit=",0,"Число значений (каналов или импульсов), по которым была произведена минимизация");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTres=",0,"[fNhit] Резидуалы в нс");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNchGeom=",0,"[fNhit] порядковые номер каналов");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhitMC=",0,"Число каналов, для которых были посчитаны МК резидуалы от мюона");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTresMC=",0,"[fNhitMC] МК резидуалы в нс");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNchGeomMC=",0,"[fNhitMC] МК порядковые номер каналов");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaRec=",0,"reconstructed zenith angle in degrees in (0-180)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMC=",0,"MC zenith angle in degrees in (0-180)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiRec=",0,"reconstructed azimuth angle in degrees in (0-180)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMC=",0,"MC azimuth angle in degrees in (0-180)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX0Rec=",0,"reconstructed x0 in meters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX0MC=",0,"MC x0 in meters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY0Rec=",0,"reconstructed y0 in meters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY0MC=",0,"MC y0 in meters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeRec=",0,"Rec time in ns");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeMC=",0,"MC time in ns");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fPMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFuncValueMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fZDist=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fZDistMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,2,"fImpulseNumbers=",0,"[fNhit] номера импульсов");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BReconstruct */
static void G__setup_memvarBReconstruct(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct));
   { BReconstruct *p; p=(BReconstruct*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BEvent),-1,-1,2,"fEvent=",0,"! Generic event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BEventMask),-1,-1,2,"fEventMask=",0,"! EventMask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BGeomTel),-1,-1,2,"fGeomTel=",0,"! Geometry information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BSecInteraction),-1,-1,2,"fSecInteraction=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BRecParameters),-1,-1,2,"fRecParameters=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BChannelMask),-1,-1,2,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BSecInteraction),-1,-1,2,"fZeroSecInteraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BMuonCriterionParameters),-1,-1,2,"fMuonCriterionParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BRecCintLN_TString),-1,-1,2,"fEventMaskName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fVerbose=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFixAzimuth=",0,"fix azimuth angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZshift=",0,"coordinate orgin shift along Z axis");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNchIsRes=",0,"channel to exclude from reconstruction");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fInitialsType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_ROOTcLcLMathcLcLMinimizer),-1,-1,2,"fMinimizer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_ROOTcLcLMathcLcLFunctor),-1,-1,2,"fFunctor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BReconstructMuon */
static void G__setup_memvarBReconstructMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon));
   { BReconstructMuon *p; p=(BReconstructMuon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BRecQualify */
static void G__setup_memvarBRecQualify(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify));
   { BRecQualify *p; p=(BRecQualify*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BSourceEAS),-1,-1,4,"fEventSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BEvent),-1,-1,4,"fEvent=",0,"! Generic event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BEventMask),-1,-1,4,"fEventMask=",0,"! EventMask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BGeomTel),-1,-1,4,"fGeomTel=",0,"! Geometry information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BSecInteraction),-1,-1,4,"fSecInteraction=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BChannelMask),-1,-1,4,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BRecParameters),-1,-1,4,"fRecParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_BEventMask),-1,-1,4,"fMCEventMask=",0,"filter event mask");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BRecCintLN_TString),-1,-1,4,"fFilterEventMaskName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fVerbose=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNchIsRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTelLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_ROOTcLcLMathcLcLInterpolator),-1,-1,4,"fInterpolator=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMuonNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fQ10FileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fHitCriterionFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fRhoUpLim=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fXshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fYshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fZshift=",0,"coordinate orgin shift along Z axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BRecQuality */
static void G__setup_memvarBRecQuality(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQuality));
   { BRecQuality *p; p=(BRecQuality*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fSourceAzimuthAngle=",0,"source azimuth angle in rad");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fSourcePolarAngle=",0,"source polar angle in rad");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRecAzimuthAngle=",0,"rec azimuth angle in rad");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRecPolarAngle=",0,"rec polar angle in rad");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPsi=",0,"angle between rec and source directions in rad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBRecCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBRecParameters(void) {
   /* BRecParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecParameters));
   G__memfunc_setup("BRecParameters",1392,G__BRecCint_269_0_1, 105, G__get_linked_tagnum(&G__BRecCintLN_BRecParameters), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPar",883,G__BRecCint_269_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsFixed",972,G__BRecCint_269_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitial",1002,G__BRecCint_269_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxLimit",1093,G__BRecCint_269_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinLimit",1091,G__BRecCint_269_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStep",700,G__BRecCint_269_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQual",691,G__BRecCint_269_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFuncValue",1193,G__BRecCint_269_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFuncValueMC",1337,G__BRecCint_269_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaRec",1072,G__BRecCint_269_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaMC",934,G__BRecCint_269_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiMC",721,G__BRecCint_269_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiRec",859,G__BRecCint_269_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX0Rec",706,G__BRecCint_269_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY0Rec",707,G__BRecCint_269_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX0MC",568,G__BRecCint_269_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY0MC",569,G__BRecCint_269_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__BRecCint_269_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMC",512,G__BRecCint_269_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZDist",782,G__BRecCint_269_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZDistMC",926,G__BRecCint_269_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsi",588,G__BRecCint_269_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__BRecCint_269_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImpulseNumber",1640,G__BRecCint_269_0_25, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumPar",895,G__BRecCint_269_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsFixed",984,G__BRecCint_269_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitial",1014,G__BRecCint_269_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinLimit",1103,G__BRecCint_269_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxLimit",1105,G__BRecCint_269_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStep",712,G__BRecCint_269_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrors",937,G__BRecCint_269_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFuncValue",1205,G__BRecCint_269_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQual",703,G__BRecCint_269_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhit",691,G__BRecCint_269_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTres",702,G__BRecCint_269_0_36, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNchGeom",961,G__BRecCint_269_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhitMC",835,G__BRecCint_269_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTresMC",846,G__BRecCint_269_0_39, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNchGeomMC",1105,G__BRecCint_269_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTresNchGeom",1375,G__BRecCint_269_0_41, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"g - 'Bool_t' 0 - ismc i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNhit",703,G__BRecCint_269_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTres",714,G__BRecCint_269_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNchGeom",973,G__BRecCint_269_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTresMC",858,G__BRecCint_269_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nch D - 'Double_t' 0 - tresmc "
"I - 'Int_t' 0 - nchgeom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaRec",1084,G__BRecCint_269_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaMC",946,G__BRecCint_269_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiRec",871,G__BRecCint_269_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiMC",733,G__BRecCint_269_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX0Rec",718,G__BRecCint_269_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX0MC",580,G__BRecCint_269_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY0Rec",719,G__BRecCint_269_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY0MC",581,G__BRecCint_269_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__BRecCint_269_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPMC",524,G__BRecCint_269_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeRec",981,G__BRecCint_269_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeMC",843,G__BRecCint_269_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFuncValueMC",1349,G__BRecCint_269_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZDist",794,G__BRecCint_269_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZDistMC",938,G__BRecCint_269_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__BRecCint_269_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetImpulseNumbers",1767,G__BRecCint_269_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "I - - 0 - ns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BRecCint_269_0_64, 85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BRecParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BRecCint_269_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BRecCint_269_0_66, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BRecParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BRecCint_269_0_67, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BRecParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BRecCint_269_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BRecCint_269_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BRecCint_269_0_73, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BRecParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BRecCint_269_0_74, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BRecCint_269_0_75, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BRecParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BRecParameters", 1392, G__BRecCint_269_0_76, (int) ('i'), G__get_linked_tagnum(&G__BRecCintLN_BRecParameters), -1, 0, 1, 1, 1, 0, "u 'BRecParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BRecParameters", 1518, G__BRecCint_269_0_77, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BRecCint_269_0_78, (int) ('u'), G__get_linked_tagnum(&G__BRecCintLN_BRecParameters), -1, 1, 1, 1, 1, 0, "u 'BRecParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBReconstruct(void) {
   /* BReconstruct */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstruct));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Minimize",834,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Chi2",326,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 0, "D - 'Double_t' 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("M_estimator",1156,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 0, "D - 'Double_t' 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Residuals",940,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZeroRecAnalytic",1519,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BRecCintLN_BSecInteraction), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tauinv",631,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 8, 
"d - 'Double_t' 0 - txf d - 'Double_t' 0 - tyf "
"d - 'Double_t' 0 - tzf d - 'Double_t' 1 - theta "
"d - 'Double_t' 1 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("To_cos",615,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 8, 
"d - 'Double_t' 0 - the d - 'Double_t' 0 - phi "
"d - 'Double_t' 1 - t1 d - 'Double_t' 1 - t2 "
"d - 'Double_t' 1 - f1 d - 'Double_t' 1 - f2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitialValues",1338,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BReconstruct",1246,G__BRecCint_272_0_12, 105, G__get_linked_tagnum(&G__BRecCintLN_BReconstruct), -1, 0, 2, 1, 1, 0, 
"C - - 10 'NULL' name C - - 10 'NULL' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbose",1026,G__BRecCint_272_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixAzimuth",1033,G__BRecCint_272_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNchIsRes",1067,G__BRecCint_272_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialsType",1547,G__BRecCint_272_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__BRecCint_272_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventMaskName",1595,G__BRecCint_272_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BRecCint_272_0_19, 85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BReconstruct::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BRecCint_272_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BReconstruct::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BRecCint_272_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BReconstruct::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BRecCint_272_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BReconstruct::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BRecCint_272_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BRecCint_272_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BReconstruct::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BRecCint_272_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BReconstruct::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BRecCint_272_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BReconstruct::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BRecCint_272_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BReconstruct::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BReconstruct", 1246, G__BRecCint_272_0_31, (int) ('i'), G__get_linked_tagnum(&G__BRecCintLN_BReconstruct), -1, 0, 1, 1, 1, 0, "u 'BReconstruct' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BReconstruct", 1372, G__BRecCint_272_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BRecCint_272_0_33, (int) ('u'), G__get_linked_tagnum(&G__BRecCintLN_BReconstruct), -1, 1, 1, 1, 1, 0, "u 'BReconstruct' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBReconstructMuon(void) {
   /* BReconstructMuon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX0Y0",561,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"d - 'Double_t' 1 - x0 d - 'Double_t' 1 - y0 "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlaneWaveSingleMuonDirectionReconstruction",4359,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BRecCintLN_BSecInteraction), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Combinations",1254,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 - pool i - - 0 - need "
"k - - 0 - chosen i - - 0 - at "
"u 'vector<BReconstruct::pair,allocator<BReconstruct::pair> >' 'vector<pair>' 1 - set_of_pairs D - - 0 - parameters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitialValues",1338,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chi2Fit",617,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BReconstructMuon",1661,G__BRecCint_274_0_8, 105, G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon), -1, 0, 2, 1, 1, 0, 
"C - - 10 'NULL' name C - - 10 'NULL' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BRecCint_274_0_9, 85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BReconstructMuon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BRecCint_274_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BReconstructMuon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BRecCint_274_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BReconstructMuon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BRecCint_274_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BReconstructMuon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BRecCint_274_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BRecCint_274_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BReconstructMuon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BRecCint_274_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BReconstructMuon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BRecCint_274_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BReconstructMuon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BRecCint_274_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BReconstructMuon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BReconstructMuon", 1661, G__BRecCint_274_0_21, (int) ('i'), G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon), -1, 0, 1, 1, 1, 0, "u 'BReconstructMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BReconstructMuon", 1787, G__BRecCint_274_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BRecCint_274_0_23, (int) ('u'), G__get_linked_tagnum(&G__BRecCintLN_BReconstructMuon), -1, 1, 1, 1, 1, 0, "u 'BReconstructMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBRecQualify(void) {
   /* BRecQualify */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQualify));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HitCriterion",1236,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProbability",1441,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 0, 
"d - - 0 - rho d - - 0 - energy "
"d - - 0 - angle g - - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZDist",494,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZDist",782,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLargestMuonNum",1729,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BRecQualify",1079,G__BRecCint_280_0_10, 105, G__get_linked_tagnum(&G__BRecCintLN_BRecQualify), -1, 0, 2, 1, 1, 0, 
"C - - 10 'NULL' name C - - 10 'NULL' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQ10Path",875,G__BRecCint_280_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitCriterionFlag",1914,G__BRecCint_280_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilterEventMaskName",2209,G__BRecCint_280_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCResiduals",1084,G__BRecCint_280_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCResidualsX0Y0",1357,G__BRecCint_280_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbose",1026,G__BRecCint_280_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNchIsRes",1067,G__BRecCint_280_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BRecCint_280_0_18, 85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BRecQualify::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BRecCint_280_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecQualify::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BRecCint_280_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BRecQualify::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BRecCint_280_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BRecQualify::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BRecCint_280_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BRecCint_280_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecQualify::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BRecCint_280_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BRecQualify::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BRecCint_280_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecQualify::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BRecCint_280_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BRecQualify::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BRecQualify", 1079, G__BRecCint_280_0_30, (int) ('i'), G__get_linked_tagnum(&G__BRecCintLN_BRecQualify), -1, 0, 1, 1, 1, 0, "u 'BRecQualify' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BRecQualify", 1205, G__BRecCint_280_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBRecQuality(void) {
   /* BRecQuality */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BRecCintLN_BRecQuality));
   G__memfunc_setup("CalcPsi",671,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BRecQuality",1093,G__BRecCint_281_0_2, 105, G__get_linked_tagnum(&G__BRecCintLN_BRecQuality), -1, 0, 2, 1, 1, 0, 
"C - - 10 'NULL' name C - - 10 'NULL' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSourceAzimuthAngle",2150,G__BRecCint_281_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSourcePolarAngle",1922,G__BRecCint_281_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecAzimuthAngle",1807,G__BRecCint_281_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecPolarAngle",1579,G__BRecCint_281_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReadyToSave",1395,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BRecCint_281_0_8, 85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BRecQuality::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BRecCint_281_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecQuality::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BRecCint_281_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BRecQuality::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BRecCint_281_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BRecQuality::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BRecCint_281_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BRecCint_281_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecQuality::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BRecCint_281_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BRecQuality::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BRecCint_281_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BRecQuality::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BRecCint_281_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BRecQuality::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BRecQuality", 1093, G__BRecCint_281_0_20, (int) ('i'), G__get_linked_tagnum(&G__BRecCintLN_BRecQuality), -1, 0, 1, 1, 1, 0, "u 'BRecQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BRecQuality", 1219, G__BRecCint_281_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BRecCint_281_0_22, (int) ('u'), G__get_linked_tagnum(&G__BRecCintLN_BRecQuality), -1, 1, 1, 1, 1, 0, "u 'BRecQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBRecCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBRecCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBRecCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BRecCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__BRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BRecCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__BRecCintLN_ROOTcLcLMathcLcLMinimizer = { "ROOT::Math::Minimizer" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_ROOTcLcLMathcLcLFunctor = { "ROOT::Math::Functor" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_ROOTcLcLMathcLcLInterpolator = { "ROOT::Math::Interpolator" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BEvent = { "BEvent" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BEventMask = { "BEventMask" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BGeomTel = { "BGeomTel" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BSecInteraction = { "BSecInteraction" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BRecParameters = { "BRecParameters" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BChannelMask = { "BChannelMask" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BMuonCriterionParameters = { "BMuonCriterionParameters" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BReconstruct = { "BReconstruct" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BReconstructMuon = { "BReconstructMuon" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR = { "vector<BReconstruct::pair,allocator<BReconstruct::pair> >" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_reverse_iteratorlEvectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BReconstruct::pair,allocator<BReconstruct::pair> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BSourceEAS = { "BSourceEAS" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BRecQualify = { "BRecQualify" , 99 , -1 };
G__linked_taginfo G__BRecCintLN_BRecQuality = { "BRecQuality" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBRecCint() {
  G__BRecCintLN_TClass.tagnum = -1 ;
  G__BRecCintLN_TBuffer.tagnum = -1 ;
  G__BRecCintLN_TMemberInspector.tagnum = -1 ;
  G__BRecCintLN_TObject.tagnum = -1 ;
  G__BRecCintLN_TString.tagnum = -1 ;
  G__BRecCintLN_ROOT.tagnum = -1 ;
  G__BRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BRecCintLN_MParContainer.tagnum = -1 ;
  G__BRecCintLN_MInputStreamID.tagnum = -1 ;
  G__BRecCintLN_MParList.tagnum = -1 ;
  G__BRecCintLN_MTask.tagnum = -1 ;
  G__BRecCintLN_ROOTcLcLMath.tagnum = -1 ;
  G__BRecCintLN_ROOTcLcLMathcLcLMinimizer.tagnum = -1 ;
  G__BRecCintLN_ROOTcLcLMathcLcLFunctor.tagnum = -1 ;
  G__BRecCintLN_ROOTcLcLMathcLcLInterpolator.tagnum = -1 ;
  G__BRecCintLN_BEvent.tagnum = -1 ;
  G__BRecCintLN_BEventMask.tagnum = -1 ;
  G__BRecCintLN_BGeomTel.tagnum = -1 ;
  G__BRecCintLN_BSecInteraction.tagnum = -1 ;
  G__BRecCintLN_BRecParameters.tagnum = -1 ;
  G__BRecCintLN_BChannelMask.tagnum = -1 ;
  G__BRecCintLN_BMuonCriterionParameters.tagnum = -1 ;
  G__BRecCintLN_BReconstruct.tagnum = -1 ;
  G__BRecCintLN_BReconstructMuon.tagnum = -1 ;
  G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR.tagnum = -1 ;
  G__BRecCintLN_reverse_iteratorlEvectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BRecCintLN_BSourceEAS.tagnum = -1 ;
  G__BRecCintLN_BRecQualify.tagnum = -1 ;
  G__BRecCintLN_BRecQuality.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBRecCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BRecCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_TString);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_ROOT);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_MTask);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_ROOTcLcLMathcLcLMinimizer);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_ROOTcLcLMathcLcLFunctor);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_ROOTcLcLMathcLcLInterpolator);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BEvent);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BEventMask);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BGeomTel);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BSecInteraction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BRecCintLN_BRecParameters),sizeof(BRecParameters),-1,324864,"BRecParameters",G__setup_memvarBRecParameters,G__setup_memfuncBRecParameters);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BChannelMask);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BMuonCriterionParameters);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BRecCintLN_BReconstruct),sizeof(BReconstruct),-1,324864,"Reconstruct",G__setup_memvarBReconstruct,G__setup_memfuncBReconstruct);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BRecCintLN_BReconstructMuon),sizeof(BReconstructMuon),-1,323840,"BReconstructMuon",G__setup_memvarBReconstructMuon,G__setup_memfuncBReconstructMuon);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_vectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_reverse_iteratorlEvectorlEBReconstructcLcLpaircOallocatorlEBReconstructcLcLpairgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BRecCintLN_BSourceEAS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BRecCintLN_BRecQualify),sizeof(BRecQualify),-1,323840,"Task to",G__setup_memvarBRecQualify,G__setup_memfuncBRecQualify);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BRecCintLN_BRecQuality),sizeof(BRecQuality),-1,323840,"Base",G__setup_memvarBRecQuality,G__setup_memfuncBRecQuality);
}
extern "C" void G__cpp_setupBRecCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupBRecCint()");
  G__set_cpp_environmentBRecCint();
  G__cpp_setup_tagtableBRecCint();

  G__cpp_setup_inheritanceBRecCint();

  G__cpp_setup_typetableBRecCint();

  G__cpp_setup_memvarBRecCint();

  G__cpp_setup_memfuncBRecCint();
  G__cpp_setup_globalBRecCint();
  G__cpp_setup_funcBRecCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBRecCint();
  return;
}
class G__cpp_setup_initBRecCint {
  public:
    G__cpp_setup_initBRecCint() { G__add_setup_func("BRecCint",(G__incsetup)(&G__cpp_setupBRecCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBRecCint() { G__remove_setup_func("BRecCint"); }
};
G__cpp_setup_initBRecCint G__cpp_setup_initializerBRecCint;

