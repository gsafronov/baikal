//
// File generated by rootcint at Tue Aug  9 21:30:13 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BMyRecCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BMyRecCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void BMyReco_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_BMyReco(void *p);
   static void deleteArray_BMyReco(void *p);
   static void destruct_BMyReco(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BMyReco*)
   {
      ::BMyReco *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BMyReco >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BMyReco", ::BMyReco::Class_Version(), "./BMyReco.h", 30,
                  typeid(::BMyReco), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BMyReco::Dictionary, isa_proxy, 4,
                  sizeof(::BMyReco) );
      instance.SetDelete(&delete_BMyReco);
      instance.SetDeleteArray(&deleteArray_BMyReco);
      instance.SetDestructor(&destruct_BMyReco);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BMyReco*)
   {
      return GenerateInitInstanceLocal((::BMyReco*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BMyReco*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BMyRecoMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_BMyRecoMC(void *p);
   static void deleteArray_BMyRecoMC(void *p);
   static void destruct_BMyRecoMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BMyRecoMC*)
   {
      ::BMyRecoMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BMyRecoMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BMyRecoMC", ::BMyRecoMC::Class_Version(), "./BMyRecoMC.h", 30,
                  typeid(::BMyRecoMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BMyRecoMC::Dictionary, isa_proxy, 4,
                  sizeof(::BMyRecoMC) );
      instance.SetDelete(&delete_BMyRecoMC);
      instance.SetDeleteArray(&deleteArray_BMyRecoMC);
      instance.SetDestructor(&destruct_BMyRecoMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BMyRecoMC*)
   {
      return GenerateInitInstanceLocal((::BMyRecoMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BMyRecoMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BMyRecoBEvt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_BMyRecoBEvt(void *p);
   static void deleteArray_BMyRecoBEvt(void *p);
   static void destruct_BMyRecoBEvt(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BMyRecoBEvt*)
   {
      ::BMyRecoBEvt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BMyRecoBEvt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BMyRecoBEvt", ::BMyRecoBEvt::Class_Version(), "./BMyRecoBEvt.h", 31,
                  typeid(::BMyRecoBEvt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BMyRecoBEvt::Dictionary, isa_proxy, 4,
                  sizeof(::BMyRecoBEvt) );
      instance.SetDelete(&delete_BMyRecoBEvt);
      instance.SetDeleteArray(&deleteArray_BMyRecoBEvt);
      instance.SetDestructor(&destruct_BMyRecoBEvt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BMyRecoBEvt*)
   {
      return GenerateInitInstanceLocal((::BMyRecoBEvt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BMyRecoBEvt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BMyRecoReco_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_BMyRecoReco(void *p);
   static void deleteArray_BMyRecoReco(void *p);
   static void destruct_BMyRecoReco(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BMyRecoReco*)
   {
      ::BMyRecoReco *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BMyRecoReco >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BMyRecoReco", ::BMyRecoReco::Class_Version(), "./BMyRecoReco.h", 33,
                  typeid(::BMyRecoReco), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BMyRecoReco::Dictionary, isa_proxy, 4,
                  sizeof(::BMyRecoReco) );
      instance.SetDelete(&delete_BMyRecoReco);
      instance.SetDeleteArray(&deleteArray_BMyRecoReco);
      instance.SetDestructor(&destruct_BMyRecoReco);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BMyRecoReco*)
   {
      return GenerateInitInstanceLocal((::BMyRecoReco*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BMyRecoReco*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BMyRecoChanSetter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_BMyRecoChanSetter(void *p);
   static void deleteArray_BMyRecoChanSetter(void *p);
   static void destruct_BMyRecoChanSetter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BMyRecoChanSetter*)
   {
      ::BMyRecoChanSetter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BMyRecoChanSetter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BMyRecoChanSetter", ::BMyRecoChanSetter::Class_Version(), "./BMyRecoChanSetter.h", 30,
                  typeid(::BMyRecoChanSetter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BMyRecoChanSetter::Dictionary, isa_proxy, 4,
                  sizeof(::BMyRecoChanSetter) );
      instance.SetDelete(&delete_BMyRecoChanSetter);
      instance.SetDeleteArray(&deleteArray_BMyRecoChanSetter);
      instance.SetDestructor(&destruct_BMyRecoChanSetter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BMyRecoChanSetter*)
   {
      return GenerateInitInstanceLocal((::BMyRecoChanSetter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BMyRecoChanSetter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr BMyReco::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BMyReco::Class_Name()
{
   return "BMyReco";
}

//______________________________________________________________________________
const char *BMyReco::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyReco*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BMyReco::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyReco*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BMyReco::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyReco*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BMyReco::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyReco*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BMyRecoMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BMyRecoMC::Class_Name()
{
   return "BMyRecoMC";
}

//______________________________________________________________________________
const char *BMyRecoMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BMyRecoMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BMyRecoMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BMyRecoMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BMyRecoBEvt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BMyRecoBEvt::Class_Name()
{
   return "BMyRecoBEvt";
}

//______________________________________________________________________________
const char *BMyRecoBEvt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoBEvt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BMyRecoBEvt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoBEvt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BMyRecoBEvt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoBEvt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BMyRecoBEvt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoBEvt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BMyRecoReco::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BMyRecoReco::Class_Name()
{
   return "BMyRecoReco";
}

//______________________________________________________________________________
const char *BMyRecoReco::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoReco*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BMyRecoReco::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoReco*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BMyRecoReco::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoReco*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BMyRecoReco::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoReco*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BMyRecoChanSetter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BMyRecoChanSetter::Class_Name()
{
   return "BMyRecoChanSetter";
}

//______________________________________________________________________________
const char *BMyRecoChanSetter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoChanSetter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BMyRecoChanSetter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoChanSetter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BMyRecoChanSetter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoChanSetter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BMyRecoChanSetter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BMyRecoChanSetter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void BMyReco::Streamer(TBuffer &R__b)
{
   // Stream an object of class BMyReco.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BMyReco::Class(),this);
   } else {
      R__b.WriteClassBuffer(BMyReco::Class(),this);
   }
}

//______________________________________________________________________________
void BMyReco::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BMyReco.
      TClass *R__cl = ::BMyReco::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventMask", &fEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomTel", &fGeomTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedImpulse", &fExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedImpulse", &fJoinExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedHeader", &fExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedHeader", &fJoinExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOUT", &fOUT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCharge", &hCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hChargeNoLED", &hChargeNoLED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGeom", &hGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfHits100", &hMapOfHits100);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfHits600", &hMapOfHits600);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPairwiseSpeed", &hPairwiseSpeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDR", &hDR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDT", &hDT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNPairs", &hNPairs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSecNum", &hSecNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSecNumQual", &hSecNumQual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hClusterSize", &hClusterSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hClusterSizeSS", &hClusterSizeSS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDirection", &hDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaTvert", &hDeltaTvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaTvertNorm", &hDeltaTvertNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaT_DEBUG", &hDeltaT_DEBUG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaTNorm_DEBUG", &hDeltaTNorm_DEBUG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLLvert", &hLLvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLOverEst", &hLOverEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLOverEstNoFac", &hLOverEstNoFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hUsedHitFrac", &hUsedHitFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNTracksVsCut", &hNTracksVsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pLLvertVsCut", &pLLvertVsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_LL3_nHits", &h_LL3_nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_LL4_nHits", &h_LL4_nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_LL5_nHits", &h_LL5_nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clight", &clight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_BMyReco(void *p) {
      delete ((::BMyReco*)p);
   }
   static void deleteArray_BMyReco(void *p) {
      delete [] ((::BMyReco*)p);
   }
   static void destruct_BMyReco(void *p) {
      typedef ::BMyReco current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BMyReco

//______________________________________________________________________________
void BMyRecoMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class BMyRecoMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BMyRecoMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(BMyRecoMC::Class(),this);
   }
}

//______________________________________________________________________________
void BMyRecoMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BMyRecoMC.
      TClass *R__cl = ::BMyRecoMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCEvent", &fMCEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventMask", &fEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomTel", &fGeomTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedImpulse", &fExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedImpulse", &fJoinExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedHeader", &fExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedHeader", &fJoinExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOUT", &fOUT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMuonN", &hMuonN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTotalMuonN", &hTotalMuonN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMuCutN", &hMuCutN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMuNotNull", &hMuNotNull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMuonE", &hMuonE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hThetaPrimary", &hThetaPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHits_ThetaPrimary", &hNHits_ThetaPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHits_EnergyPrimary", &hNHits_EnergyPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hChannelN", &hChannelN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hChannelN_bevt", &hChannelN_bevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPulseN_bevt", &hPulseN_bevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfHits1", &hMapOfHits1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfHits3", &hMapOfHits3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGeom", &hGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clight", &clight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmu", &cmu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_BMyRecoMC(void *p) {
      delete ((::BMyRecoMC*)p);
   }
   static void deleteArray_BMyRecoMC(void *p) {
      delete [] ((::BMyRecoMC*)p);
   }
   static void destruct_BMyRecoMC(void *p) {
      typedef ::BMyRecoMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BMyRecoMC

//______________________________________________________________________________
void BMyRecoBEvt::Streamer(TBuffer &R__b)
{
   // Stream an object of class BMyRecoBEvt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BMyRecoBEvt::Class(),this);
   } else {
      R__b.WriteClassBuffer(BMyRecoBEvt::Class(),this);
   }
}

//______________________________________________________________________________
void BMyRecoBEvt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BMyRecoBEvt.
      TClass *R__cl = ::BMyRecoBEvt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCEvent", &fMCEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventMask", &fEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomTel", &fGeomTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedImpulse", &fExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedImpulse", &fJoinExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedHeader", &fExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedHeader", &fJoinExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOUT", &fOUT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCharge", &hCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hChargeNoLED", &hChargeNoLED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hChargeOverAmpl", &hChargeOverAmpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTime", &hTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTimeOverCharge", &hTimeOverCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGeom", &hGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfHits1pe", &hMapOfHits1pe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfHitsNpe", &hMapOfHitsNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMapOfClusteredHits", &hMapOfClusteredHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPairwiseSpeed", &hPairwiseSpeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPairwiseSpeedMu", &hPairwiseSpeedMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNClusters", &hNClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSecNum", &hSecNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSecNumQual", &hSecNumQual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hClusterSize", &hClusterSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hClusterSizeSS", &hClusterSizeSS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hClustersPerHit", &hClustersPerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDirection", &hDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaT_verticalMu", &hDeltaT_verticalMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaT_verticalMu_Norm", &hDeltaT_verticalMu_Norm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaT_DEBUG", &hDeltaT_DEBUG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaTNorm_DEBUG", &hDeltaTNorm_DEBUG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLL_verticalMu", &hLL_verticalMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTime_overestimation", &hTime_overestimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hThetaPrimary", &hThetaPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMuonDelay", &hMuonDelay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHits_EnergyPrimary", &hNHits_EnergyPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHits_NRespMuon", &hNHits_NRespMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNRespMuons", &hNRespMuons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNRespMuons_vertical", &hNRespMuons_vertical);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNMuonsTot", &hNMuonsTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNMuonsTot_vertical", &hNMuonsTot_vertical);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNRespMuonsBelow", &hNRespMuonsBelow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hClustersRespMatrix", &hClustersRespMatrix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNClusters_EnergyPrimary", &hNClusters_EnergyPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNClusters_NRespMuon", &hNClusters_NRespMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSumPolarAngle", &hSumPolarAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAngleRes", &hAngleRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDirDebug", &hDirDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPolarVertical", &hPolarVertical);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPolarAll", &hPolarAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaT_verticalMuGen", &hDeltaT_verticalMuGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaT_verticalMuDelta", &hDeltaT_verticalMuDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDeltaZ_vert", &hDeltaZ_vert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNPulsePerChannel", &hNPulsePerChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hModMH_NRespMuons", &hModMH_NRespMuons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cWater", &cWater);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cVacuum", &cVacuum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseMCEvent", &fUseMCEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitIsUsed", (void*)&fHitIsUsed);
      R__insp.InspectMember("vector<bool>", (void*)&fHitIsUsed, "fHitIsUsed.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iLastBins", &iLastBins);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_BMyRecoBEvt(void *p) {
      delete ((::BMyRecoBEvt*)p);
   }
   static void deleteArray_BMyRecoBEvt(void *p) {
      delete [] ((::BMyRecoBEvt*)p);
   }
   static void destruct_BMyRecoBEvt(void *p) {
      typedef ::BMyRecoBEvt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BMyRecoBEvt

//______________________________________________________________________________
void BMyRecoReco::Streamer(TBuffer &R__b)
{
   // Stream an object of class BMyRecoReco.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BMyRecoReco::Class(),this);
   } else {
      R__b.WriteClassBuffer(BMyRecoReco::Class(),this);
   }
}

//______________________________________________________________________________
void BMyRecoReco::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BMyRecoReco.
      TClass *R__cl = ::BMyRecoReco::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCEvent", &fMCEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventMask", &fEventMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomTel", &fGeomTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedImpulse", &fExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedImpulse", &fJoinExtractedImpulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractedHeader", &fExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fJoinExtractedHeader", &fJoinExtractedHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecParam", &fRecParam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cWater", &cWater);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cVacuum", &cVacuum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOUT", &fOUT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTimeDiff", &hTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calibChanID", &calibChanID);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_BMyRecoReco(void *p) {
      delete ((::BMyRecoReco*)p);
   }
   static void deleteArray_BMyRecoReco(void *p) {
      delete [] ((::BMyRecoReco*)p);
   }
   static void destruct_BMyRecoReco(void *p) {
      typedef ::BMyRecoReco current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BMyRecoReco

//______________________________________________________________________________
void BMyRecoChanSetter::Streamer(TBuffer &R__b)
{
   // Stream an object of class BMyRecoChanSetter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BMyRecoChanSetter::Class(),this);
   } else {
      R__b.WriteClassBuffer(BMyRecoChanSetter::Class(),this);
   }
}

//______________________________________________________________________________
void BMyRecoChanSetter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BMyRecoChanSetter.
      TClass *R__cl = ::BMyRecoChanSetter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelMask", &fChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chanID", &chanID);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_BMyRecoChanSetter(void *p) {
      delete ((::BMyRecoChanSetter*)p);
   }
   static void deleteArray_BMyRecoChanSetter(void *p) {
      delete [] ((::BMyRecoChanSetter*)p);
   }
   static void destruct_BMyRecoChanSetter(void *p) {
      typedef ::BMyRecoChanSetter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BMyRecoChanSetter

/********************************************************
* BMyRecCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBMyRecCint();

extern "C" void G__set_cpp_environmentBMyRecCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BMyReco.h");
  G__add_compiledheader("BMyRecoMC.h");
  G__add_compiledheader("BMyRecoBEvt.h");
  G__add_compiledheader("BMyRecoReco.h");
  G__add_compiledheader("BMyRecoChanSetter.h");
  G__add_compiledheader("BMyRecIncl.h");
  G__cpp_reset_tagtableBMyRecCint();
}
#include <new>
extern "C" int G__cpp_dllrevBMyRecCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BMyReco */
static int G__BMyRecCint_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyReco* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BMyReco(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) BMyReco(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BMyReco::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyReco::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BMyReco::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BMyReco::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BMyReco*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyReco::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyReco::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyReco::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_244_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyReco::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BMyRecCint_244_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BMyReco* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BMyReco(*(BMyReco*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BMyReco G__TBMyReco;
static int G__BMyRecCint_244_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BMyReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BMyReco*) (soff+(sizeof(BMyReco)*i)))->~G__TBMyReco();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BMyReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BMyReco*) (soff))->~G__TBMyReco();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BMyRecCint_244_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyReco* dest = (BMyReco*) G__getstructoffset();
   *dest = *(BMyReco*) libp->para[0].ref;
   const BMyReco& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BMyRecoMC */
static int G__BMyRecCint_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BMyRecoMC(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) BMyRecoMC(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((BMyRecoMC*) G__getstructoffset())->filterHits((float) G__double(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float>* pobj;
         vector<float> xobj = ((BMyRecoMC*) G__getstructoffset())->getHitLocation((int) G__int(libp->para[0]));
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BMyRecoMC*) G__getstructoffset())->getDeltaT_ns((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BMyRecoMC*) G__getstructoffset())->getDeltaR_m((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float>* pobj;
         vector<float> xobj = ((BMyRecoMC*) G__getstructoffset())->getDirection((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BMyRecoMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BMyRecoMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BMyRecoMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BMyRecoMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_250_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BMyRecCint_250_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BMyRecoMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BMyRecoMC(*(BMyRecoMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BMyRecoMC G__TBMyRecoMC;
static int G__BMyRecCint_250_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BMyRecoMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BMyRecoMC*) (soff+(sizeof(BMyRecoMC)*i)))->~G__TBMyRecoMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BMyRecoMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BMyRecoMC*) (soff))->~G__TBMyRecoMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BMyRecCint_250_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoMC* dest = (BMyRecoMC*) G__getstructoffset();
   *dest = *(BMyRecoMC*) libp->para[0].ref;
   const BMyRecoMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BMyRecoBEvt */
static int G__BMyRecCint_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoBEvt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BMyRecoBEvt(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) BMyRecoBEvt(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BMyRecoBEvt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoBEvt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BMyRecoBEvt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BMyRecoBEvt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BMyRecoBEvt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoBEvt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoBEvt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoBEvt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_251_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoBEvt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BMyRecCint_251_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BMyRecoBEvt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BMyRecoBEvt(*(BMyRecoBEvt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BMyRecoBEvt G__TBMyRecoBEvt;
static int G__BMyRecCint_251_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BMyRecoBEvt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BMyRecoBEvt*) (soff+(sizeof(BMyRecoBEvt)*i)))->~G__TBMyRecoBEvt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BMyRecoBEvt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BMyRecoBEvt*) (soff))->~G__TBMyRecoBEvt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BMyRecCint_251_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoBEvt* dest = (BMyRecoBEvt*) G__getstructoffset();
   *dest = *(BMyRecoBEvt*) libp->para[0].ref;
   const BMyRecoBEvt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BMyRecoReco */
static int G__BMyRecCint_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoReco* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BMyRecoReco(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) BMyRecoReco(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BMyRecoReco::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoReco::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BMyRecoReco::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BMyRecoReco::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BMyRecoReco*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoReco::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoReco::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoReco::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoReco::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BMyRecCint_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BMyRecoReco* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BMyRecoReco(*(BMyRecoReco*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BMyRecoReco G__TBMyRecoReco;
static int G__BMyRecCint_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BMyRecoReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BMyRecoReco*) (soff+(sizeof(BMyRecoReco)*i)))->~G__TBMyRecoReco();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BMyRecoReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BMyRecoReco*) (soff))->~G__TBMyRecoReco();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BMyRecCint_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoReco* dest = (BMyRecoReco*) G__getstructoffset();
   *dest = *(BMyRecoReco*) libp->para[0].ref;
   const BMyRecoReco& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BMyRecoChanSetter */
static int G__BMyRecCint_254_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoChanSetter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BMyRecoChanSetter((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BMyRecoChanSetter((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BMyRecoChanSetter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoChanSetter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BMyRecoChanSetter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BMyRecoChanSetter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BMyRecoChanSetter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoChanSetter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoChanSetter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BMyRecoChanSetter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BMyRecCint_254_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BMyRecoChanSetter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BMyRecCint_254_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BMyRecoChanSetter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BMyRecoChanSetter(*(BMyRecoChanSetter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BMyRecoChanSetter G__TBMyRecoChanSetter;
static int G__BMyRecCint_254_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BMyRecoChanSetter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BMyRecoChanSetter*) (soff+(sizeof(BMyRecoChanSetter)*i)))->~G__TBMyRecoChanSetter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BMyRecoChanSetter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BMyRecoChanSetter*) (soff))->~G__TBMyRecoChanSetter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BMyRecCint_254_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BMyRecoChanSetter* dest = (BMyRecoChanSetter*) G__getstructoffset();
   *dest = *(BMyRecoChanSetter*) libp->para[0].ref;
   const BMyRecoChanSetter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BMyReco */

/* BMyRecoMC */

/* BMyRecoBEvt */

/* BMyRecoReco */

/* BMyRecoChanSetter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBMyRecCint {
 public:
  G__Sizep2memfuncBMyRecCint(): p(&G__Sizep2memfuncBMyRecCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBMyRecCint::*p)();
};

size_t G__get_sizep2memfuncBMyRecCint()
{
  G__Sizep2memfuncBMyRecCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBMyRecCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco))) {
     BMyReco *G__Lderived;
     G__Lderived=(BMyReco*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco),G__get_linked_tagnum(&G__BMyRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco),G__get_linked_tagnum(&G__BMyRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco),G__get_linked_tagnum(&G__BMyRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco),G__get_linked_tagnum(&G__BMyRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC))) {
     BMyRecoMC *G__Lderived;
     G__Lderived=(BMyRecoMC*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC),G__get_linked_tagnum(&G__BMyRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC),G__get_linked_tagnum(&G__BMyRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC),G__get_linked_tagnum(&G__BMyRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC),G__get_linked_tagnum(&G__BMyRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt))) {
     BMyRecoBEvt *G__Lderived;
     G__Lderived=(BMyRecoBEvt*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt),G__get_linked_tagnum(&G__BMyRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt),G__get_linked_tagnum(&G__BMyRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt),G__get_linked_tagnum(&G__BMyRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt),G__get_linked_tagnum(&G__BMyRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco))) {
     BMyRecoReco *G__Lderived;
     G__Lderived=(BMyRecoReco*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco),G__get_linked_tagnum(&G__BMyRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco),G__get_linked_tagnum(&G__BMyRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco),G__get_linked_tagnum(&G__BMyRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco),G__get_linked_tagnum(&G__BMyRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter))) {
     BMyRecoChanSetter *G__Lderived;
     G__Lderived=(BMyRecoChanSetter*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter),G__get_linked_tagnum(&G__BMyRecCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter),G__get_linked_tagnum(&G__BMyRecCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter),G__get_linked_tagnum(&G__BMyRecCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter),G__get_linked_tagnum(&G__BMyRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBMyRecCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BMyRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BMyRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BMyRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BMyRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BMyRecCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BMyRecCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BMyReco */
static void G__setup_memvarBMyReco(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco));
   { BMyReco *p; p=(BMyReco*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEvent),-1,-1,2,"fEvent=",0,"! Generic event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEventMask),-1,-1,2,"fEventMask=",0,"! EventMask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BGeomTel),-1,-1,2,"fGeomTel=",0,"! Geometry information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedImpulseTel),-1,-1,2,"fExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedImpulseTel),-1,-1,2,"fJoinExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedHeader),-1,-1,2,"fExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedHeader),-1,-1,2,"fJoinExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BChannelMask),-1,-1,2,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TFile),-1,-1,2,"fOUT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hChargeNoLED=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfHits100=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfHits600=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hPairwiseSpeed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNPairs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hSecNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hSecNumQual=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hClusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hClusterSizeSS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaTvert=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaTvertNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaT_DEBUG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaTNorm_DEBUG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hLLvert=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hLOverEst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hLOverEstNoFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hUsedHitFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNTracksVsCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TProfile),-1,-1,2,"pLLvertVsCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"h_LL3_nHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"h_LL4_nHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"h_LL5_nHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"clight=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BMyRecoMC */
static void G__setup_memvarBMyRecoMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC));
   { BMyRecoMC *p; p=(BMyRecoMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEvent),-1,-1,2,"fEvent=",0,"! Generic event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BMCEvent),-1,-1,2,"fMCEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEventMask),-1,-1,2,"fEventMask=",0,"! EventMask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BGeomTel),-1,-1,2,"fGeomTel=",0,"! Geometry information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedImpulseTel),-1,-1,2,"fExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedImpulseTel),-1,-1,2,"fJoinExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedHeader),-1,-1,2,"fExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedHeader),-1,-1,2,"fJoinExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BChannelMask),-1,-1,2,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TFile),-1,-1,2,"fOUT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hMuonN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hTotalMuonN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hMuCutN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hMuNotNull=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hMuonE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hThetaPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hNHits_ThetaPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hNHits_EnergyPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hChannelN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hChannelN_bevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hPulseN_bevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfHits1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfHits3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"clight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cmu=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BMyRecoBEvt */
static void G__setup_memvarBMyRecoBEvt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt));
   { BMyRecoBEvt *p; p=(BMyRecoBEvt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEvent),-1,-1,2,"fEvent=",0,"! Generic event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BMCEvent),-1,-1,2,"fMCEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEventMask),-1,-1,2,"fEventMask=",0,"! EventMask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BGeomTel),-1,-1,2,"fGeomTel=",0,"! Geometry information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedImpulseTel),-1,-1,2,"fExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedImpulseTel),-1,-1,2,"fJoinExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedHeader),-1,-1,2,"fExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedHeader),-1,-1,2,"fJoinExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BChannelMask),-1,-1,2,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TFile),-1,-1,2,"fOUT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hChargeNoLED=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hChargeOverAmpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hTimeOverCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfHits1pe=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfHitsNpe=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hMapOfClusteredHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hPairwiseSpeed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hPairwiseSpeedMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hSecNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hSecNumQual=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hClusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hClusterSizeSS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hClustersPerHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaT_verticalMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaT_verticalMu_Norm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaT_DEBUG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaTNorm_DEBUG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hLL_verticalMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hTime_overestimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hThetaPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hMuonDelay=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hNHits_EnergyPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hNHits_NRespMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNRespMuons=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNRespMuons_vertical=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNMuonsTot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNMuonsTot_vertical=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNRespMuonsBelow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hClustersRespMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hNClusters_EnergyPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hNClusters_NRespMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hSumPolarAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hAngleRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDirDebug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hPolarVertical=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hPolarAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaT_verticalMuGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaT_verticalMuDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hDeltaZ_vert=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,2,"hNPulsePerChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH2F),-1,-1,2,"hModMH_NRespMuons=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cWater=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cVacuum=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseMCEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,4,"fHitIsUsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"iLastBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BMyRecoReco */
static void G__setup_memvarBMyRecoReco(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco));
   { BMyRecoReco *p; p=(BMyRecoReco*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEvent),-1,-1,2,"fEvent=",0,"! Generic event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BMCEvent),-1,-1,2,"fMCEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BEventMask),-1,-1,2,"fEventMask=",0,"! EventMask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BGeomTel),-1,-1,2,"fGeomTel=",0,"! Geometry information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedImpulseTel),-1,-1,2,"fExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedImpulseTel),-1,-1,2,"fJoinExtractedImpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BExtractedHeader),-1,-1,2,"fExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BJoinExtractedHeader),-1,-1,2,"fJoinExtractedHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BRecParameters),-1,-1,2,"fRecParam=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BChannelMask),-1,-1,2,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"iEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cWater=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cVacuum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TFile),-1,-1,4,"fOUT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TH1F),-1,-1,4,"hTimeDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"calibChanID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BMyRecoChanSetter */
static void G__setup_memvarBMyRecoChanSetter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter));
   { BMyRecoChanSetter *p; p=(BMyRecoChanSetter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_BChannelMask),-1,-1,2,"fChannelMask=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"chanID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BMyRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBMyRecCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBMyReco(void) {
   /* BMyReco */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BMyReco",657,G__BMyRecCint_244_0_4, 105, G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitLocation",1438,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 1, 1, 4, 0, "i - - 0 - chanID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeEstimate_ns",1867,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - initialPoint u 'vector<float,allocator<float> >' 'vector<float>' 0 - trajectoryDirection "
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - pointInSpace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("filterHits",1054,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 4, 0, "f - - 0 - minAmpl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeQualityCluster",1897,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 4, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusterIDs i - - 0 - initialHitID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeQualitySSCluster",2063,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 4, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusterIDs i - - 0 - initialHitID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLvalue",937,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusterQual_id u 'vector<float,allocator<float> >' 'vector<float>' 0 - initialPoint "
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - trajectoryDirection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaT_ns",1214,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaR_m",1096,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 2, 1, 4, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BMyRecCint_244_0_14, 85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BMyReco::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BMyRecCint_244_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyReco::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BMyRecCint_244_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BMyReco::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BMyRecCint_244_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BMyReco::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BMyRecCint_244_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BMyRecCint_244_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyReco::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BMyRecCint_244_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyReco::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BMyRecCint_244_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyReco::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BMyRecCint_244_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyReco::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BMyReco", 657, G__BMyRecCint_244_0_26, (int) ('i'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco), -1, 0, 1, 1, 1, 0, "u 'BMyReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BMyReco", 783, G__BMyRecCint_244_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BMyRecCint_244_0_28, (int) ('u'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyReco), -1, 1, 1, 1, 1, 0, "u 'BMyReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBMyRecoMC(void) {
   /* BMyRecoMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BMyRecoMC",801,G__BMyRecCint_250_0_4, 105, G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("filterHits",1054,G__BMyRecCint_250_0_5, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "f - - 0 - minAmpl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitLocation",1438,G__BMyRecCint_250_0_6, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 1, 1, 1, 0, "i - - 0 - hitID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaT_ns",1214,G__BMyRecCint_250_0_7, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaR_m",1096,G__BMyRecCint_250_0_8, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,G__BMyRecCint_250_0_9, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 2, 1, 1, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BMyRecCint_250_0_10, 85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BMyRecoMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BMyRecCint_250_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BMyRecCint_250_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BMyRecoMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BMyRecCint_250_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BMyRecoMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BMyRecCint_250_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BMyRecCint_250_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BMyRecCint_250_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BMyRecCint_250_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BMyRecCint_250_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BMyRecoMC", 801, G__BMyRecCint_250_0_22, (int) ('i'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC), -1, 0, 1, 1, 1, 0, "u 'BMyRecoMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BMyRecoMC", 927, G__BMyRecCint_250_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BMyRecCint_250_0_24, (int) ('u'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoMC), -1, 1, 1, 1, 1, 0, "u 'BMyRecoMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBMyRecoBEvt(void) {
   /* BMyRecoBEvt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BMyRecoBEvt",1026,G__BMyRecCint_251_0_4, 105, G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - fname g - - 0 - useMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitLocation",1438,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 1, 1, 4, 0, "i - - 0 - chanID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeEstimate_ns",1867,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - initialPoint u 'vector<float,allocator<float> >' 'vector<float>' 0 - trajectoryDirection "
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - pointInSpace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("filterHits",1054,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 4, 0, "f - - 0 - minAmpl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeQualityCluster",1897,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 4, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusterIDs i - - 0 - initialHitID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeQualitySSCluster",2063,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 4, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusterIDs i - - 0 - initialHitID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLvalue",937,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusterQual_id u 'vector<float,allocator<float> >' 'vector<float>' 0 - initialPoint "
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - trajectoryDirection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotClusters",1268,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 0 - ff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaT_ns",1214,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaR_m",1096,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 2, 1, 4, 0, 
"i - - 0 - hit1_id i - - 0 - hit2_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrimaryDirection",1957,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseMCEvent",1259,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BMyRecCint_251_0_17, 85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BMyRecoBEvt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BMyRecCint_251_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoBEvt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BMyRecCint_251_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BMyRecoBEvt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BMyRecCint_251_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BMyRecoBEvt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BMyRecCint_251_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BMyRecCint_251_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoBEvt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BMyRecCint_251_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoBEvt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BMyRecCint_251_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoBEvt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BMyRecCint_251_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoBEvt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BMyRecoBEvt", 1026, G__BMyRecCint_251_0_29, (int) ('i'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt), -1, 0, 1, 1, 1, 0, "u 'BMyRecoBEvt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BMyRecoBEvt", 1152, G__BMyRecCint_251_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BMyRecCint_251_0_31, (int) ('u'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoBEvt), -1, 1, 1, 1, 1, 0, "u 'BMyRecoBEvt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBMyRecoReco(void) {
   /* BMyRecoReco */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BMyRecoReco",1050,G__BMyRecCint_253_0_4, 105, G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - fname i - - 0 - cChan "
"g - - 0 - useMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackDistanceToOM",1983,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - initialPoint u 'vector<float,allocator<float> >' 'vector<float>' 0 - trajectoryDirection "
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - xyzOM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeEstimate_ns",1867,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - initialPoint u 'vector<float,allocator<float> >' 'vector<float>' 0 - trajectoryDirection "
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - pointInSpace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BMyRecCint_253_0_7, 85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BMyRecoReco::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BMyRecCint_253_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoReco::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BMyRecCint_253_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BMyRecoReco::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BMyRecCint_253_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BMyRecoReco::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BMyRecCint_253_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BMyRecCint_253_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoReco::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BMyRecCint_253_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoReco::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BMyRecCint_253_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoReco::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BMyRecCint_253_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoReco::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BMyRecoReco", 1050, G__BMyRecCint_253_0_19, (int) ('i'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco), -1, 0, 1, 1, 1, 0, "u 'BMyRecoReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BMyRecoReco", 1176, G__BMyRecCint_253_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BMyRecCint_253_0_21, (int) ('u'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoReco), -1, 1, 1, 1, 1, 0, "u 'BMyRecoReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBMyRecoChanSetter(void) {
   /* BMyRecoChanSetter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BMyRecoChanSetter",1666,G__BMyRecCint_254_0_4, 105, G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter), -1, 0, 1, 1, 1, 0, "i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BMyRecCint_254_0_5, 85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BMyRecoChanSetter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BMyRecCint_254_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoChanSetter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BMyRecCint_254_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BMyRecoChanSetter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BMyRecCint_254_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BMyRecoChanSetter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BMyRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BMyRecCint_254_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BMyRecCint_254_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoChanSetter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BMyRecCint_254_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoChanSetter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BMyRecCint_254_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BMyRecoChanSetter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BMyRecCint_254_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BMyRecoChanSetter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BMyRecoChanSetter", 1666, G__BMyRecCint_254_0_17, (int) ('i'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter), -1, 0, 1, 1, 1, 0, "u 'BMyRecoChanSetter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BMyRecoChanSetter", 1792, G__BMyRecCint_254_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BMyRecCint_254_0_19, (int) ('u'), G__get_linked_tagnum(&G__BMyRecCintLN_BMyRecoChanSetter), -1, 1, 1, 1, 1, 0, "u 'BMyRecoChanSetter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBMyRecCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBMyRecCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBMyRecCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BMyRecCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BMyRecCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BEvent = { "BEvent" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BEventMask = { "BEventMask" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BGeomTel = { "BGeomTel" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BChannelMask = { "BChannelMask" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BExtractedImpulseTel = { "BExtractedImpulseTel" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BJoinExtractedImpulseTel = { "BJoinExtractedImpulseTel" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BExtractedHeader = { "BExtractedHeader" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BJoinExtractedHeader = { "BJoinExtractedHeader" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BMyReco = { "BMyReco" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BMCEvent = { "BMCEvent" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BMyRecoMC = { "BMyRecoMC" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BMyRecoBEvt = { "BMyRecoBEvt" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BRecParameters = { "BRecParameters" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BMyRecoReco = { "BMyRecoReco" , 99 , -1 };
G__linked_taginfo G__BMyRecCintLN_BMyRecoChanSetter = { "BMyRecoChanSetter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBMyRecCint() {
  G__BMyRecCintLN_TClass.tagnum = -1 ;
  G__BMyRecCintLN_TBuffer.tagnum = -1 ;
  G__BMyRecCintLN_TMemberInspector.tagnum = -1 ;
  G__BMyRecCintLN_TObject.tagnum = -1 ;
  G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__BMyRecCintLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__BMyRecCintLN_string.tagnum = -1 ;
  G__BMyRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BMyRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BMyRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BMyRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BMyRecCintLN_TFile.tagnum = -1 ;
  G__BMyRecCintLN_MParContainer.tagnum = -1 ;
  G__BMyRecCintLN_MInputStreamID.tagnum = -1 ;
  G__BMyRecCintLN_MParList.tagnum = -1 ;
  G__BMyRecCintLN_MTask.tagnum = -1 ;
  G__BMyRecCintLN_TH1F.tagnum = -1 ;
  G__BMyRecCintLN_TH2F.tagnum = -1 ;
  G__BMyRecCintLN_TProfile.tagnum = -1 ;
  G__BMyRecCintLN_BEvent.tagnum = -1 ;
  G__BMyRecCintLN_BEventMask.tagnum = -1 ;
  G__BMyRecCintLN_BGeomTel.tagnum = -1 ;
  G__BMyRecCintLN_BChannelMask.tagnum = -1 ;
  G__BMyRecCintLN_BExtractedImpulseTel.tagnum = -1 ;
  G__BMyRecCintLN_BJoinExtractedImpulseTel.tagnum = -1 ;
  G__BMyRecCintLN_BExtractedHeader.tagnum = -1 ;
  G__BMyRecCintLN_BJoinExtractedHeader.tagnum = -1 ;
  G__BMyRecCintLN_BMyReco.tagnum = -1 ;
  G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__BMyRecCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BMyRecCintLN_BMCEvent.tagnum = -1 ;
  G__BMyRecCintLN_BMyRecoMC.tagnum = -1 ;
  G__BMyRecCintLN_BMyRecoBEvt.tagnum = -1 ;
  G__BMyRecCintLN_BRecParameters.tagnum = -1 ;
  G__BMyRecCintLN_BMyRecoReco.tagnum = -1 ;
  G__BMyRecCintLN_BMyRecoChanSetter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBMyRecCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_string);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_MTask);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BEvent);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BEventMask);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BGeomTel);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BChannelMask);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BExtractedImpulseTel);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BJoinExtractedImpulseTel);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BExtractedHeader);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BJoinExtractedHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BMyReco),sizeof(BMyReco),-1,324608,(char*)NULL,G__setup_memvarBMyReco,G__setup_memfuncBMyReco);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BMCEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BMyRecoMC),sizeof(BMyRecoMC),-1,324608,(char*)NULL,G__setup_memvarBMyRecoMC,G__setup_memfuncBMyRecoMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BMyRecoBEvt),sizeof(BMyRecoBEvt),-1,324608,(char*)NULL,G__setup_memvarBMyRecoBEvt,G__setup_memfuncBMyRecoBEvt);
   G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BRecParameters);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BMyRecoReco),sizeof(BMyRecoReco),-1,324608,(char*)NULL,G__setup_memvarBMyRecoReco,G__setup_memfuncBMyRecoReco);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BMyRecCintLN_BMyRecoChanSetter),sizeof(BMyRecoChanSetter),-1,324608,(char*)NULL,G__setup_memvarBMyRecoChanSetter,G__setup_memfuncBMyRecoChanSetter);
}
extern "C" void G__cpp_setupBMyRecCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupBMyRecCint()");
  G__set_cpp_environmentBMyRecCint();
  G__cpp_setup_tagtableBMyRecCint();

  G__cpp_setup_inheritanceBMyRecCint();

  G__cpp_setup_typetableBMyRecCint();

  G__cpp_setup_memvarBMyRecCint();

  G__cpp_setup_memfuncBMyRecCint();
  G__cpp_setup_globalBMyRecCint();
  G__cpp_setup_funcBMyRecCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBMyRecCint();
  return;
}
class G__cpp_setup_initBMyRecCint {
  public:
    G__cpp_setup_initBMyRecCint() { G__add_setup_func("BMyRecCint",(G__incsetup)(&G__cpp_setupBMyRecCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBMyRecCint() { G__remove_setup_func("BMyRecCint"); }
};
G__cpp_setup_initBMyRecCint G__cpp_setup_initializerBMyRecCint;

